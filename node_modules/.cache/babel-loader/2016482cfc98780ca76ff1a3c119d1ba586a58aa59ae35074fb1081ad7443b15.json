{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { mapGetters } from 'vuex';\nimport { useRoute } from 'vue-router';\nexport default {\n  computed: {\n    ...mapGetters(['cars']),\n    car() {\n      const route = useRoute();\n      const carId = parseInt(route.params.carId);\n      return this.cars.find(car => car.id === carId);\n    }\n  },\n  methods: {\n    goBack() {\n      this.$router.push('/'); // Powrót do strony głównej\n    }\n  },\n  created() {\n    if (this.cars.length === 0) {\n      this.$store.dispatch('fetchCars'); // Ładowanie samochodów, jeśli jeszcze nie są załadowane\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","useRoute","computed","car","route","carId","parseInt","params","cars","find","id","methods","goBack","$router","push","created","length","$store","dispatch"],"sources":["C:\\Users\\48575\\Desktop\\Moje portfolio\\PROJECT IT 02. DriveZone\\drive_zone_project\\src\\views\\CarDetails.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n      <v-row>\r\n        <v-col cols=\"12\">\r\n          <v-card v-if=\"car\">\r\n            <!-- Wyświetlanie danych tylko, jeśli car jest dostępne -->\r\n            <v-card-title>{{ car.make }} {{ car.model }}</v-card-title>\r\n            <v-card-subtitle>{{ car.year }}</v-card-subtitle>\r\n            <v-card-text>\r\n              <p><strong>Description:</strong> {{ car.description }}</p>\r\n              <p><strong>Location:</strong> {{ car.location }}</p>\r\n              <p><strong>Mileage:</strong> {{ car.technical_details.mileage }}</p>\r\n              <p><strong>Transmission:</strong> {{ car.technical_details.transmission }}</p>\r\n              <p><strong>Drive:</strong> {{ car.technical_details.drive }}</p>\r\n              <p><strong>Engine:</strong> {{ car.technical_details.engine }}</p>\r\n              <p><strong>Fuel Type:</strong> {{ car.technical_details.fuel_type }}</p>\r\n              <p><strong>Color:</strong> {{ car.technical_details.color }}</p>\r\n            </v-card-text>\r\n            <v-btn @click=\"goBack\">Go Back</v-btn>\r\n          </v-card>\r\n          <v-alert v-else type=\"error\">Car details are not available!</v-alert>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapGetters } from 'vuex';\r\n  import { useRoute } from 'vue-router';\r\n  \r\n  export default {\r\n    computed: {\r\n      ...mapGetters(['cars']),\r\n      car() {\r\n        const route = useRoute();\r\n        const carId = parseInt(route.params.carId);\r\n        return this.cars.find(car => car.id === carId);\r\n      },\r\n    },\r\n    methods: {\r\n      goBack() {\r\n        this.$router.push('/');  // Powrót do strony głównej\r\n      },\r\n    },\r\n    created() {\r\n      if (this.cars.length === 0) {\r\n        this.$store.dispatch('fetchCars');  // Ładowanie samochodów, jeśli jeszcze nie są załadowane\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .v-card {\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;AA2BE,SAASA,UAAS,QAAS,MAAM;AACjC,SAASC,QAAO,QAAS,YAAY;AAErC,eAAe;EACbC,QAAQ,EAAE;IACR,GAAGF,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;IACvBG,GAAGA,CAAA,EAAG;MACJ,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;MACxB,MAAMI,KAAI,GAAIC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACF,KAAK,CAAC;MAC1C,OAAO,IAAI,CAACG,IAAI,CAACC,IAAI,CAACN,GAAE,IAAKA,GAAG,CAACO,EAAC,KAAML,KAAK,CAAC;IAChD;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAG;IAC3B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACP,IAAI,CAACQ,MAAK,KAAM,CAAC,EAAE;MAC1B,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAG;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}